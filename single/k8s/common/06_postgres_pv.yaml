apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-data-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/share/postgres/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-sts
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image:  postgres:15.1-alpine
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        ports:
        - name: postgres
          containerPort: 5432
          protocol: TCP
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-initdb-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data-pvc
      - name: postgres-initdb-script
        configMap:
          name: postgres-initdb-cm
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
spec:
  type: NodePort
  selector:
    app: postgres
  ports:
  - name: postgres
    protocol: TCP
    port: 5432
    targetPort: 5432
    nodePort: 31432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb-cm
data:
  init_db.sql: |
    CREATE TABLE IF NOT EXISTS t_user (
                        id varchar(32) not null,
                        age int4,
                        name varchar(60),
                        primary key (id)
    );


    INSERT INTO t_user (id, age, name)
    SELECT '111', 25, 'Adam'
      WHERE
        NOT EXISTS (
          SELECT id FROM t_user WHERE id = '111'
    );