apiVersion: v1
kind: ConfigMap
metadata:
  name: single-cm
  namespace: default
data:
  application-k8s.yml: |
    spring:
      datasource:
        username: root
        password: ${SECRETS_MYSQL_ROOT_PASSWORD}
        url: jdbc:mysql://mysql-svc:3306/test?serverTimezone=UTC
      jpa:
        hibernate:
          ddl-auto: create
        database-platform: org.hibernate.dialect.MySQL8Dialect
        show-sql: true
        properties:
          hibernate:
            format_sql: true
      data:
        redis:
          repositories:
            enabled: true
          host: redis-svc
          port: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: single-deploy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: single
  template:
    metadata:
      labels:
        app: single
    spec:
      containers:
        - name: single
          image: localhost:5000/elliot/single/k8s:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config-volume
              mountPath: /workspace/config
          env:
            - name: SECRETS_MYSQL_ROOT_PASSWORD
              #value: abcd1234
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root_password
      volumes:
        - name: config-volume
          configMap:
            name: single-cm
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: single-svc
spec:
  type: ClusterIP
  selector:
    app: single
  ports:
  # Default port used by the image
  - name: single
    protocol: TCP
    port: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: single-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: single-vs
spec:
  hosts:
  - "*"
  gateways:
  - single-gateway
  http:
  - match:
    - uri:
        prefix: "/single/"
    rewrite:
        uri: "/"
    route:
    - destination:
        host: single-svc
        port:
          number: 8080