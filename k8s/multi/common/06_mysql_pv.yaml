apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/share/mysql/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-cm
data:
  mysql.cnf: |
    [mysqld]
    port=3306
    ##basedir=/var/lib/mysql
    ##datadir=/var/lib/mysql/mysqldb
    character-set-server=utf8mb4
    default_authentication_plugin=mysql_native_password
    [mysql]
    default-character-set=utf8mb4
    [client]
    port=3306
    default-character-set=utf8mb4
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-sts
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image:  mysql:8
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: abcd1234
        ports:
        - name: mysql
          containerPort: 3306
          protocol: TCP
        volumeMounts:
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-initdb-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-config
        configMap:
          name: mysql-cm
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-initdb-script
        configMap:
          name: mysql-initdb-cm
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
spec:
  type: NodePort
  selector:
    app: mysql
  ports:
  - name: mysql
    protocol: TCP
    port: 3306
    targetPort: 3306
    nodePort: 31306
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-cm
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS test CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;